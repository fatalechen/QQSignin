server.port=80

spring.social.qq.appId=101528594
spring.social.qq.appSecret=3311619569ab8feeb3e4c645f4d18bd2
#在qq登录后转向的绑定页面,重定向页面
spring.social.qq.signUpUrl=/signUp.html
#qq链接第二段
spring.social.qq.providerId=qq
#qq链接第一段，其中qq互联只需要回调一个域名就可以了，假如写了那么需要保持一致
spring.social.qq.filterProcessesUrl=/callback

#与mysql数据库连接
spring.datasource.driverClassName=com.mysql.jdbc.Driver
spring.datasource.url=jdbc:mysql://129.204.35.21:3306/miaosha?useUnicode=true&characterEncoding=utf-8&serverTimezone=GMT%2B8&useSSL=false&verifyServerCertificate=false
spring.datasource.username=root
spring.datasource.password=cgz12345678

使用druid连接池
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
#druid连接池连接池参数配置
#初始化时建立物理连接的个数。初始化发生再显式调用init方法，或者第一次getConnection时
spring.datasource.initialSize=20
#最大连接池数量
spring.datasource.maxActive=30
#获取连接时最大等待时间
spring.datasource.maxWait=3000
#最小连接池数量
spring.datasource.minIdle=10
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
spring.datasource.timeBetweenEvictionRunsMillis=60000
# 配置一个连接在池中最小生存的时间，单位是毫秒
spring.datasource.minEvictableIdleTimeMillis=300000
#验证数据库连接的有效性
#spring.datasource.validationQuery=SELECT 1 FROM DUAL
#指明连接是否被空闲连接回收器(如果有)进行检验.如果检测失败,则连接将被从池中去除
#注意: 设置为true后如果要生效,validationQuery参数必须设置为非空字符串
#spring.datasource.testWhileIdle=true
#指明是否在从池中取出连接前进行检验,如果检验失败,则从池中去除连接并尝试取出另一个.
#注意: 设置为true后如果要生效,validationQuery参数必须设置为非空字符串
#spring.datasource.testOnBorrow=false
#指明是否在归还到池中前进行检验
#注意: 设置为true后如果要生效,validationQuery参数必须设置为非空字符串
#spring.datasource.testOnReturn=false
#开启池的prepared statement 池功能
spring.datasource.poolPreparedStatements=true
#statement池能够同时分配的打开的statements的最大数量, 如果设置为0表示不限制
spring.datasource.maxPoolPreparedStatementPerConnectionSize=200
#stat功能（监控）、wall功能（sql防火墙）、需要配置log4j的配置文件否则会报错，没有logback过滤器，具体看FilterManager的public static Properties loadFilterConfig() throws IOException方法
#spring.datasource.filters=stat,wall,log4j2
# 通过connectProperties属性来打开mergeSql功能；慢SQL记录
spring.datasource.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000

